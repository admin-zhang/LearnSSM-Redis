<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

<!--    类型别名-->
    <typeAliases>
        <package name="xyz.codedog.chapter4.pojo"/>
<!--        <typeAlias type="xyz.codedog.chapter4.pojo.Role" alias="role" />-->
<!--        <typeAlias type="xyz.codedog.chapter4.pojo.User" alias="user" />-->
    </typeAliases>

<!--    类型处理器-->
    <typeHandlers>
        <typeHandler handler="xyz.codedog.chapter4.typeHandler.MyTypeHandler" jdbcType="VARCHAR" javaType="string" />
    </typeHandlers>

<!--    配置对象工厂(一般情况下默认即可)-->
    <objectFactory type="xyz.codedog.chapter4.objectFactory.MyObjectFactory">
        <property name="prop1" value="value1"/>
    </objectFactory>

<!--    运行环境-->
    <environments default="development">
        <environment id="deve lopment">
            <!-- 事物管理器
                    * JDBC 使用JdbcTransactionFactory
                        JDBC方式对数据库的提交和回滚进行操作
                    * MANAGED 使用ManagedTransactionFactory
                        提交和回滚方法不用任何操作,而是交给容器处理
            -->
            <transactionManager type="JDBC"/>
            <!-- 数据源
                    * UNPOOLED  非数据库池
                    * POOLED    利用'池'
                    * JNDI      为了能在如EJB或应用服务器这类容器中使用,可集中或在外部配置数据源
            -->
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/ssm?serverTimezone=UTC"/>
                <property name="username" value="panda"/>
                <property name="password" value="panda174510"/>
            </dataSource>
        </environment>
    </environments>

<!--    数据库厂商标识-->
    <databaseIdProvider type="DB_VENDOR">
        <property name="Oracle" value="oracle"/>
        <property name="MySQl" value="mysql"/>
        <property name="DB@" value="db2"/>
    </databaseIdProvider>

<!--    映射器-->
    <mappers>
<!--        文件路径引入-->
        <!--
            <mapper resource="xyz/codedog/chapter4/mapper/RoleMapper.xml"/>
        -->

<!--        包名引入-->
        <package name="xyz/codedog/chapter4/mapper"/>

<!--        类注册引入-->
        <!--
            <mapper class="xyz.codedog.chapter4.mapper.RoleMapper"/>
        -->

<!--        -->

    </mappers>
</configuration>